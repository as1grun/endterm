4. API (Интерфейс прикладного программирования)
Что такое API?
API расшифровывается как интерфейс прикладного программирования. Это набор правил и протоколов, который позволяет одному программному приложению взаимодействовать с другим. API определяют методы и форматы данных, которые приложения могут использовать для запроса информации и обмена ею.

Примеры использования API:

Интеграция: API позволяют различным программным системам взаимодействовать и обмениваться данными.
Автоматизация: API позволяют автоматизировать повторяющиеся задачи, позволяя приложениям взаимодействовать программно.
Сторонние сервисы: Многие сервисы предоставляют API, позволяющие разработчикам получать доступ к их функциональности или данным.
Веб-разработка: API обычно используются в веб-разработке для взаимодействия с веб-сервисами и извлечения данных.


Ограничения API:

Ограничение скорости: Некоторые API имеют ограничения на использование (rate limiting) для предотвращения злоупотреблений.
Зависимость: Использование внешних API создает зависимость, и изменения в API могут повлиять на ваше приложение.
Проблемы безопасности: Неправильно защищенные API-интерфейсы могут создавать угрозы безопасности, такие как несанкционированный доступ к конфиденциальным данным.

5. Socket
Что такое Socket?
Сокет - это низкоуровневая конечная точка связи, которая обеспечивает способ взаимодействия процессов по сети. Сокеты позволяют программам на разных устройствах взаимодействовать путем отправки и получения данных.

Варианты использования сокетов:

Взаимодействие клиент-сервер: Сокеты обычно используются в архитектурах клиент-сервер для обмена данными между приложениями.
Приложения реального времени: Сокеты необходимы для приложений реального времени, таких как чат-приложения и онлайн-игры.
Передача файлов: Сокеты можно использовать для передачи файлов между устройствами по сети.